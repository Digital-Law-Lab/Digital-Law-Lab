"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[124],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=o,k=m["".concat(p,".").concat(u)]||m[u]||c[u]||r;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5402:(e,t,n)=>{n.d(t,{Kg:()=>b,bT:()=>y,eZ:()=>f,hE:()=>p,ih:()=>N,zq:()=>h});var a=n(7294);const o="Mark Ferraretto",r="https://github.com/mferrare",i="@mferrare",l="If you have any queries please contact",p="https://drive.google.com/drive/folders/1-YbZJxIIkKswZ8YUXV8O3Ptly031YDC1?usp=sharing",s="https://dev.dll.org.au/da/",d="https://dev.dll.org.au/da/",m="https://github.com/Digital-Law-Lab",c=m+"/Digital-Law-Lab",u=c+"/blob/main/docassemble_playground_manager.py",k="https://digital-law-lab.slack.com",g=p;function h(e){let t="";return t=e.text?e.text:l,a.createElement("p",null,t," ",a.createElement("a",{href:r},o))}function b(e){return"name"==e.data?o:"url"==e.data?r:"full_url"==e.data?a.createElement("a",{href:r},o):"github"==e.data?i:"ERROR: data: "+e.data+" does not exist"}function f(e){let t="",n="";switch(e.data){case"dev_server":t=s;break;case"dll_repo":t=c;break;case"dpm":t=u;case"prod_server":t=d;break;case"slack":t=k;break;case"github":t=m;break;case"google_drive":t=g;break;default:t="DisplayServiceData: Incorrect data supplied"}return n=e.service_name?e.service_name:"No service defined",a.createElement("span",null,a.createElement("a",{href:t},n))}const N="disb",y={[N]:{borderRadius:"5px",display:"block",margin:"20px auto",boxShadow:"0px 2px 5px rgba(0,0,0,0.25)"},diis:{borderRadius:"5px",boxShadow:"0px 2px 5px rgba(0,0,0,0.25)"}}},594:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(7462),o=(n(7294),n(3905)),r=n(5402);const i={title:"Promoting Code into Production"},l=void 0,p={unversionedId:"guides/promoting-code-into-production",id:"guides/promoting-code-into-production",title:"Promoting Code into Production",description:"Introduction",source:"@site/docs/guides/promoting-code-into-production.mdx",sourceDirName:"guides",slug:"/guides/promoting-code-into-production",permalink:"/Digital-Law-Lab/guides/promoting-code-into-production",draft:!1,tags:[],version:"current",lastUpdatedBy:"Mark Ferraretto",lastUpdatedAt:1682849491,formattedLastUpdatedAt:"Apr 30, 2023",frontMatter:{title:"Promoting Code into Production"},sidebar:"guidesSidebar",previous:{title:"Editing Docassemble Code in VS Code",permalink:"/Digital-Law-Lab/guides/editing-docassemble-code"},next:{title:"Provisioning a new Docassemble Repository",permalink:"/Digital-Law-Lab/guides/provision-new-docassemble-repo"}},s={},d=[{value:"Introduction",id:"introduction",level:3},{value:"Only promote <code>next</code> into production",id:"only-promote-next-into-production",level:3},{value:"The production branch name must be <code>main</code>",id:"the-production-branch-name-must-be-main",level:3},{value:"Preparation Checks and Tests",id:"preparation-checks-and-tests",level:3},{value:"Example workflow",id:"example-workflow",level:2},{value:"Before promotion",id:"before-promotion",level:3},{value:"Promotion",id:"promotion",level:3}],m={toc:d},c="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"At a high level, promoting code into production works as follows:"),(0,o.kt)("h3",{id:"only-promote-next-into-production"},"Only promote ",(0,o.kt)("inlineCode",{parentName:"h3"},"next")," into production"),(0,o.kt)("p",null,"All code to go into production should be in the ",(0,o.kt)("inlineCode",{parentName:"p"},"next")," branch"),(0,o.kt)("h3",{id:"the-production-branch-name-must-be-main"},"The production branch name must be ",(0,o.kt)("inlineCode",{parentName:"h3"},"main")),(0,o.kt)("p",null,"Some older repos might have a ",(0,o.kt)("inlineCode",{parentName:"p"},"master")," branch.  Delete or rename to\n",(0,o.kt)("inlineCode",{parentName:"p"},"main"),".  We will use ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," across all repos that we commission."),(0,o.kt)("h3",{id:"preparation-checks-and-tests"},"Preparation Checks and Tests"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Conduct regression Testing")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Update docassemble package metadata (in ",(0,o.kt)("inlineCode",{parentName:"p"},"setup.py")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"setup()"),").  Check the following:"),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"name - should match repository name (",(0,o.kt)("strong",{parentName:"li"},"Note:")," the name may not match if the repository has been provisioned according to the ",(0,o.kt)("a",{parentName:"li",href:"/guides/provision-new-docassemble-repo"},"Provisioning a New Docassemble Repository")," standard"),(0,o.kt)("li",{parentName:"ol"},"version number - should match milestone")),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"update version number in ",(0,o.kt)("inlineCode",{parentName:"li"},"setup.py")),(0,o.kt)("li",{parentName:"ul"},"update versionnumber in ",(0,o.kt)("inlineCode",{parentName:"li"},"__init.py__"))),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"description - make sure it's meaningful"),(0,o.kt)("li",{parentName:"ol"},"long_description"),(0,o.kt)("li",{parentName:"ol"},"author_email (should be ",(0,o.kt)("inlineCode",{parentName:"li"},"XXXX@digitallawlab.org"),") (",(0,o.kt)("strong",{parentName:"li"},"TBC"),")"),(0,o.kt)("li",{parentName:"ol"},"licence - should be `Copyright (c) YYYY Flinders University. All Rights Reserved'"),(0,o.kt)("li",{parentName:"ol"},"url - should be ",(0,o.kt)("inlineCode",{parentName:"li"},"https://flinders.edu.au")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Review ",(0,o.kt)("inlineCode",{parentName:"p"},"README.md"),".  Make sure it makes sense")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"check the main program is called ",(0,o.kt)("inlineCode",{parentName:"p"},"main.yml"),".  Rename if necessary"))),(0,o.kt)("admonition",{title:"TODO",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Add Digital Law Lab attribution?")),(0,o.kt)("admonition",{title:"TODO",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Add step to update changelog")),(0,o.kt)("h2",{id:"example-workflow"},"Example workflow"),(0,o.kt)("h3",{id:"before-promotion"},"Before promotion"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Agreement reached on issues to address for next milestone for a project"),(0,o.kt)("li",{parentName:"ul"},"Milestone created under Issues for that project"),(0,o.kt)("li",{parentName:"ul"},"Milestone name matches this Policy"),(0,o.kt)("li",{parentName:"ul"},"Once all Issues are addressed a PR is raised to merge into ",(0,o.kt)("inlineCode",{parentName:"li"},"next"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"multiple PRs may be raised if necessary")))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Only ",(0,o.kt)(r.Kg,{data:"full_url"})," should approve PRs merging into ",(0,o.kt)("inlineCode",{parentName:"p"},"main"))),(0,o.kt)("h3",{id:"promotion"},"Promotion"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Check no outstanding issues for Milestone.  Address and start again otherwise"),(0,o.kt)("li",{parentName:"ul"},"Do the merge"),(0,o.kt)("li",{parentName:"ul"},"Do the production tests and checks"),(0,o.kt)("li",{parentName:"ul"},"Merge ",(0,o.kt)("inlineCode",{parentName:"li"},"next")," into ",(0,o.kt)("inlineCode",{parentName:"li"},"main")),(0,o.kt)("li",{parentName:"ul"},"Tag ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," with Milestone"),(0,o.kt)("li",{parentName:"ul"},"Pull ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," into playground and install package on development server",(0,o.kt)("admonition",{parentName:"li",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Pull Main from the ",(0,o.kt)("inlineCode",{parentName:"p"},"Packages")," folder in the Playground.  Don't use\n",(0,o.kt)("inlineCode",{parentName:"p"},"docassemble_playground_manager.py")," for this step.  The playground should sanity check the integrity of the package, which ",(0,o.kt)("inlineCode",{parentName:"p"},"docassemble_playground_manager.py")," does not."))),(0,o.kt)("li",{parentName:"ul"},"Additional tests (if required)"),(0,o.kt)("li",{parentName:"ul"},"Send link to app to client.  Request approval",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"if there are changes, make a new ",(0,o.kt)("inlineCode",{parentName:"li"},"next"),", make changes to a new milestone and repeat process"))),(0,o.kt)("li",{parentName:"ul"},"On approval (with no changes) milestone tag of app can be installed into production server"),(0,o.kt)("li",{parentName:"ul"},"send produciton link to client. Confirm access"),(0,o.kt)("li",{parentName:"ul"},"work with client to make app available (eg: work with clients' web developer to add app to website)")))}u.isMDXComponent=!0}}]);