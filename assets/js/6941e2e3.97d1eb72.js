"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[374],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=n,k=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return a?r.createElement(k,o(o({ref:t},c),{},{components:a})):r.createElement(k,o({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1034:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const i={title:"Repository Naming Standard"},o=void 0,l={unversionedId:"policies/repository-naming-standard",id:"policies/repository-naming-standard",title:"Repository Naming Standard",description:"For Docassemble Repositories",source:"@site/docs/policies/repository-naming-standard.mdx",sourceDirName:"policies",slug:"/policies/repository-naming-standard",permalink:"/Digital-Law-Lab/policies/repository-naming-standard",draft:!1,tags:[],version:"current",lastUpdatedBy:"Mark Ferraretto",lastUpdatedAt:1686479941,formattedLastUpdatedAt:"Jun 11, 2023",frontMatter:{title:"Repository Naming Standard"},sidebar:"policiesSidebar",previous:{title:"Milestones and Tags Policy",permalink:"/Digital-Law-Lab/policies/milestone-tags-policy"},next:{title:"Slack Channel Standard",permalink:"/Digital-Law-Lab/policies/slack-channel-naming-standard"}},s={},p=[{value:"For Docassemble Repositories",id:"for-docassemble-repositories",level:3},{value:"Example",id:"example",level:4},{value:"Code repositories that are Not Docassemble Packages",id:"code-repositories-that-are-not-docassemble-packages",level:3},{value:"Repositories created for individual users (eg: to store working code not related to a project)",id:"repositories-created-for-individual-users-eg-to-store-working-code-not-related-to-a-project",level:3},{value:"Examples",id:"examples",level:4},{value:"Other Repositories",id:"other-repositories",level:3}],c={toc:p},d="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"for-docassemble-repositories"},"For Docassemble Repositories"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"docassemble-AAAAnnDescriptiveText")),(0,n.kt)("p",null,"where:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"docassemble-")," is the prefix required for any Docassemble package."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AAAA")," is the short name or abbreviation of an organisation (eg: ",(0,n.kt)("inlineCode",{parentName:"li"},"CLCSA")," for Community Legal Centres SA or ",(0,n.kt)("inlineCode",{parentName:"li"},"UC")," for Uniting Communities)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"A unique abbreviation should always be chosen"),(0,n.kt)("li",{parentName:"ul"},"use ",(0,n.kt)("inlineCode",{parentName:"li"},"DLL")," for Digital Law Lab repositories"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"nn")," is a two-digit number starting from 01"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DescriptiveText")," is a short description of the repo.  No spaces between words.  Use CamelCase.")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("ol",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ol"},"Docassemble omits the ",(0,n.kt)("inlineCode",{parentName:"li"},"docassemble-")," part of a package name when referring to package names.\nIn this manual we also follow that convention.  When we refer to a 'package name' we mean the part of\nthe repo name that appears after ",(0,n.kt)("inlineCode",{parentName:"li"},"docassemble-"),"."),(0,n.kt)("li",{parentName:"ol"},"Docassemble only allows upper and lowercase letters and numbers (ie: ",(0,n.kt)("inlineCode",{parentName:"li"},"[A-Za-z0-9]")," to be part of a pacakge name. "),(0,n.kt)("li",{parentName:"ol"},"A package name can only start with a letter (ie: ",(0,n.kt)("inlineCode",{parentName:"li"},"[A-Za-z]"),")"))),(0,n.kt)("h4",{id:"example"},"Example"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"docassemble-CLCSA01ServiceDirectory")," - this repo is for a CLCSA service directory app and is the first app we have been asked to work on for CLCSA."),(0,n.kt)("h3",{id:"code-repositories-that-are-not-docassemble-packages"},"Code repositories that are Not Docassemble Packages"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"AAAAnnDescriptiveText")),(0,n.kt)("p",null,"the conventions are the same as above.  This is not required but we do it for consistency."),(0,n.kt)("h3",{id:"repositories-created-for-individual-users-eg-to-store-working-code-not-related-to-a-project"},"Repositories created for individual users (eg: to store working code not related to a project)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"DLLuuuuunnDescriptiveText")," or\n",(0,n.kt)("inlineCode",{parentName:"p"},"docassemble-DLLuuuunnDesciptiveText")," (if a docassemble package)"),(0,n.kt)("p",null,"where:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"uuuuu")," is the GitHub username of the user creating the repository"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"nn")," is a number starting from 01 (as above)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DescriptiveText")," is a description (as above)")),(0,n.kt)("h4",{id:"examples"},"Examples"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DLLmferrare01TestRepo")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"docassemble-DLLmferrare02TestDAPackage"))),(0,n.kt)("h3",{id:"other-repositories"},"Other Repositories"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Digital-Law-Lab")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This is a special repository used to store documentation and utilities used across the organisation")))}m.isMDXComponent=!0}}]);