"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[35],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=i.createContext({}),u=function(e){var t=i.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=u(e.components);return i.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(r),g=n,m=d["".concat(c,".").concat(g)]||d[g]||p[g]||a;return r?i.createElement(m,o(o({ref:t},s),{},{components:r})):i.createElement(m,o({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var u=2;u<a;u++)o[u]=r[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}g.displayName="MDXCreateElement"},86:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var i=r(7462),n=(r(7294),r(3905));const a={},o="Git and GitHub",l={unversionedId:"guides/quick-crash-courses/crashcourse-git-github",id:"guides/quick-crash-courses/crashcourse-git-github",title:"Git and GitHub",description:"Commands Overview",source:"@site/docs/guides/quick-crash-courses/crashcourse-git-github.md",sourceDirName:"guides/quick-crash-courses",slug:"/guides/quick-crash-courses/crashcourse-git-github",permalink:"/guides/quick-crash-courses/crashcourse-git-github",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/guides/quick-crash-courses/crashcourse-git-github.md",tags:[],version:"current",frontMatter:{},sidebar:"guidesSidebar",previous:{title:"Quick Crash Courses",permalink:"/guides/quick-crash-courses/"},next:{title:"Markdown",permalink:"/markdown-guide"}},c={},u=[{value:"Commands Overview",id:"commands-overview",level:2},{value:"Key Concepts",id:"key-concepts",level:2},{value:"Initialisation",id:"initialisation",level:3},{value:"Staging",id:"staging",level:3},{value:"Commiting",id:"commiting",level:3},{value:"Branches",id:"branches",level:3},{value:"Remote Repository",id:"remote-repository",level:3},{value:"Cloning",id:"cloning",level:4},{value:"Pulling",id:"pulling",level:4},{value:"Pushing",id:"pushing",level:4},{value:"Merging",id:"merging",level:4},{value:"VS Code Source Control",id:"vs-code-source-control",level:2},{value:"Advanced Git",id:"advanced-git",level:2}],s={toc:u},d="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,i.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"git-and-github"},"Git and GitHub"),(0,n.kt)("h2",{id:"commands-overview"},"Commands Overview"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"clone (and only a specific branch with the ",(0,n.kt)("inlineCode",{parentName:"li"},"-b")," flag)"),(0,n.kt)("li",{parentName:"ul"},"new branch"),(0,n.kt)("li",{parentName:"ul"},"switch branch"),(0,n.kt)("li",{parentName:"ul"},"add"),(0,n.kt)("li",{parentName:"ul"},"Commit"),(0,n.kt)("li",{parentName:"ul"},"push (origin and branch name)"),(0,n.kt)("li",{parentName:"ul"},"pull request"),(0,n.kt)("li",{parentName:"ul"},"or use vscode extensions and built in features")),(0,n.kt)("h2",{id:"key-concepts"},"Key Concepts"),(0,n.kt)("h3",{id:"initialisation"},"Initialisation"),(0,n.kt)("h3",{id:"staging"},"Staging"),(0,n.kt)("h3",{id:"commiting"},"Commiting"),(0,n.kt)("h3",{id:"branches"},"Branches"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"creating new branches")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"switiching branch"))),(0,n.kt)("h3",{id:"remote-repository"},"Remote Repository"),(0,n.kt)("h4",{id:"cloning"},"Cloning"),(0,n.kt)("h4",{id:"pulling"},"Pulling"),(0,n.kt)("h4",{id:"pushing"},"Pushing"),(0,n.kt)("h4",{id:"merging"},"Merging"),(0,n.kt)("h2",{id:"vs-code-source-control"},"VS Code Source Control"),(0,n.kt)("h2",{id:"advanced-git"},"Advanced Git"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},".gitignore")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},".gitkeep"))))}p.isMDXComponent=!0}}]);