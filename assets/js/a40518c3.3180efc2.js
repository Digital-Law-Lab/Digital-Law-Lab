"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[864],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=r,k=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return a?n.createElement(k,i(i({ref:t},s),{},{components:a})):n.createElement(k,i({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},295:(e,t,a)=>{a.d(t,{Kg:()=>b,eZ:()=>g,zq:()=>h});var n=a(7294);const r="Mark Ferraretto",o="https://github.com/mferrare",i="@mferrare",l="If you have any queries please contact",c="https://dev.dll.org.au/da/",p="https://dev.dll.org.au/da/",s="https://github.com/Digital-Law-Lab",d=s+"/Digital-Law-Lab",m=d+"/blob/main/docassemble_playground_manager.py",u="https://digital-law-lab.slack.com",k="https://drive.google.com/drive/folders/1fK41cjHrIeqfOmdmi-0lF3dOtZAjgYf9";function h(e){let t="";return t=e.text?e.text:l,n.createElement("p",null,t," ",n.createElement("a",{href:o},r))}function b(e){return"name"==e.data?r:"url"==e.data?o:"full_url"==e.data?n.createElement("a",{href:o},r):"github"==e.data?i:"ERROR: data: "+e.data+" does not exist"}function g(e){let t="",a="";switch(e.data){case"dev_server":t=c;break;case"dll_repo":t=d;break;case"dpm":t=m;case"prod_server":t=p;break;case"slack":t=u;break;case"github":t=s;break;case"google_drive":t=k;break;default:t="DisplayServiceData: Incorrect data supplied"}return a=e.service_name?e.service_name:"No service defined",n.createElement("span",null,n.createElement("a",{href:t},a))}},3233:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=a(7462),r=(a(7294),a(3905)),o=a(295);const i={title:"Provisioning a new Docassemble Repository"},l=void 0,c={unversionedId:"guides/provision-new-docassemble-repo",id:"guides/provision-new-docassemble-repo",title:"Provisioning a new Docassemble Repository",description:"Introduction",source:"@site/docs/guides/provision-new-docassemble-repo.mdx",sourceDirName:"guides",slug:"/guides/provision-new-docassemble-repo",permalink:"/Digital-Law-Lab/guides/provision-new-docassemble-repo",draft:!1,tags:[],version:"current",lastUpdatedBy:"Mark Ferraretto",lastUpdatedAt:1679569799,formattedLastUpdatedAt:"Mar 23, 2023",frontMatter:{title:"Provisioning a new Docassemble Repository"},sidebar:"guidesSidebar",previous:{title:"Promoting Code into Production",permalink:"/Digital-Law-Lab/guides/promoting-code-into-production"}},p={},s=[{value:"Introduction",id:"introduction",level:3},{value:"Clone and Mirror the Repository",id:"clone-and-mirror-the-repository",level:3},{value:"Clean out branches",id:"clean-out-branches",level:3},{value:"Update the Package Info",id:"update-the-package-info",level:3},{value:"Create working branch structure",id:"create-working-branch-structure",level:3},{value:"Grant access to the repo",id:"grant-access-to-the-repo",level:3},{value:"Protect <code>main</code> and <code>next</code> branches",id:"protect-main-and-next-branches",level:3},{value:"Create Slack channel",id:"create-slack-channel",level:3}],d={toc:s},m="wrapper";function u(e){let{components:t,...i}=e;return(0,r.kt)(m,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Use this procedure when 'copying' a repository of existing code from another repository into the Digital Law Lab so we can work on it."),(0,r.kt)("h3",{id:"clone-and-mirror-the-repository"},"Clone and Mirror the Repository"),(0,r.kt)("admonition",{title:"TODO",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Instructions on creating a package from scratch")),(0,r.kt)("p",null,"Where we work on existing code (eg: code from LLAW3301 repo) we do not create a fork.  Instead we should mirror the repository into our Organisation."),(0,r.kt)("p",null,"Steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a new repository in Digital Law Lab using our ",(0,r.kt)("a",{parentName:"li",href:"/policies/repository-naming-standard"},"Repository Naming Standard")," via the web browser",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"eg: we use the web browser to create a repo called ",(0,r.kt)("inlineCode",{parentName:"p"},"docassemble-clcsa-01-service-directory")))),(0,r.kt)("li",{parentName:"ol"},"Do a bare clone of the existing repository (command-line)",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"eg: we will clone from LLAW3301:",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"git clone --bare https://github.com/LLAW3301/docassemble-LLAW33012020S2P06.git")))),(0,r.kt)("li",{parentName:"ol"},"Do a mirror push to the repo just created in step 1.",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"git push --mirror https://github.com/Digital-Law-Lab/docassemble-clcsa-01-service-directory"))))),(0,r.kt)("h3",{id:"clean-out-branches"},"Clean out branches"),(0,r.kt)("p",null,"If the repository mirrored is a LLAW3301 student project it will contain a number of branches that we no longer need.  Delete all branches except for ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"master"),"."),(0,r.kt)("h3",{id:"update-the-package-info"},"Update the Package Info"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create a ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," branch from ",(0,r.kt)("inlineCode",{parentName:"li"},"master")," (more on why below)"),(0,r.kt)("li",{parentName:"ul"},"check out ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," and make these changes:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Rename ",(0,r.kt)("inlineCode",{parentName:"li"},"docassemble/old_package_name")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"docassemble/new_package_name")),(0,r.kt)("li",{parentName:"ul"},"Edit ",(0,r.kt)("inlineCode",{parentName:"li"},"setup.py")," and replace all occurences of ",(0,r.kt)("inlineCode",{parentName:"li"},"old_package_name")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"new_package_name")),(0,r.kt)("li",{parentName:"ul"},"find the .yml file that is used to run the app and rename it to ",(0,r.kt)("inlineCode",{parentName:"li"},"main.yml")))),(0,r.kt)("li",{parentName:"ul"},"commit changes to ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," and push"),(0,r.kt)("li",{parentName:"ul"},"check out into Docassemble playground and confirm package still runs")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In the example we've used in this document ",(0,r.kt)("inlineCode",{parentName:"p"},"old_package_name")," would be ",(0,r.kt)("inlineCode",{parentName:"p"},"LLAW33012020S2P06")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"new_package_name")," would be ",(0,r.kt)("inlineCode",{parentName:"p"},"clcsa-01-service-directory"),".")),(0,r.kt)("h3",{id:"create-working-branch-structure"},"Create working branch structure"),(0,r.kt)("p",null,"This should be done in accordance with the [","[Code Branches Policy]","]"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Make sure ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," branch exists, otherwise create it"),(0,r.kt)("li",{parentName:"ol"},"Create ",(0,r.kt)("inlineCode",{parentName:"li"},"next_AAAA")," branches for each team member from ",(0,r.kt)("inlineCode",{parentName:"li"},"next"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"where ",(0,r.kt)("inlineCode",{parentName:"p"},"AAAA")," is the GitHub username of each team member")))),(0,r.kt)("h3",{id:"grant-access-to-the-repo"},"Grant access to the repo"),(0,r.kt)("p",null,"Grant write access to ",(0,r.kt)("inlineCode",{parentName:"p"},"Digital-Law-Lab/docassemble-developers")," group eg:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(2730).Z,width:"637",height:"614"})),(0,r.kt)("h3",{id:"protect-main-and-next-branches"},"Protect ",(0,r.kt)("inlineCode",{parentName:"h3"},"main")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},"next")," branches"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"It appears our version of GitHub only allows us to protect one branch.  This\npart of the procedure may be discontinued in future")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," It looks like protection is behind a paywall.  We may need to drop this."),(0,r.kt)("p",null,"Only ",(0,r.kt)(o.Kg,{data:"github",mdxType:"DisplayAdminData"})," should be able to merge changes into ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"next"),".  Set up protection on the branch so these two boxes are checked:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image",src:a(4582).Z,width:"778",height:"401"})),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Although the policy requires approval it does not restrict approvals only to ",(0,r.kt)(o.Kg,{data:"github",mdxType:"DisplayAdminData"}),".  However, only ",(0,r.kt)(o.Kg,{data:"github",mdxType:"DisplayAdminData"})," should approve PRs into ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"next"),".")),(0,r.kt)("h3",{id:"create-slack-channel"},"Create Slack channel"),(0,r.kt)("p",null,"On ",(0,r.kt)(o.eZ,{data:"slack",service_name:"our Slack",mdxType:"DisplayServiceData"})," create a new channel for this repository."),(0,r.kt)("p",null,"Channel naming convention:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Use the same name as the repo but omit the ",(0,r.kt)("inlineCode",{parentName:"li"},"docassemble-")," portion for docassemble packages",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"eg: the channel for the ",(0,r.kt)("inlineCode",{parentName:"p"},"docassemble-clcsa-01-serivce-directory")," is called ",(0,r.kt)("inlineCode",{parentName:"p"},"clcsa-01-service-directory"))))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The Slack requires channel names to be in lower case.")))}u.isMDXComponent=!0},2730:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/provision-add-teams-143ebe13cb40d30ac91f23d63074f361.png"},4582:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/provision-protection-b190e690d906354123133366f0865fa9.png"}}]);