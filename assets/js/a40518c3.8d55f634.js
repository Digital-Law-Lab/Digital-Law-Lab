"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[864],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,u=d["".concat(s,".").concat(m)]||d[m]||h[m]||o;return a?n.createElement(u,i(i({ref:t},p),{},{components:a})):n.createElement(u,i({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2744:(e,t,a)=>{a.d(t,{Q:()=>o});var n=a(7294),r=a(5402);function o(e){const t="/Digital-Law-Lab/"+e.imageURL,a=e.altText||"image",o=e.borderStyle||r.ih,i=r.bT[o];return console.log(r.ih),console.log(e.borderStyle),n.createElement("img",{src:t,alt:a,style:i})}},5402:(e,t,a)=>{a.d(t,{Kg:()=>b,bT:()=>y,eZ:()=>v,hE:()=>s,ih:()=>f,zq:()=>k});var n=a(7294);const r="Mark Ferraretto",o="https://github.com/mferrare",i="@mferrare",l="If you have any queries please contact",s="https://drive.google.com/drive/folders/1-YbZJxIIkKswZ8YUXV8O3Ptly031YDC1?usp=sharing",c="https://dev.dll.org.au/da/",p="https://dev.dll.org.au/da/",d="https://github.com/Digital-Law-Lab",h=d+"/Digital-Law-Lab",m=h+"/blob/main/docassemble_playground_manager.py",u="https://digital-law-lab.slack.com",g=s;function k(e){let t="";return t=e.text?e.text:l,n.createElement("p",null,t," ",n.createElement("a",{href:o},r))}function b(e){return"name"==e.data?r:"url"==e.data?o:"full_url"==e.data?n.createElement("a",{href:o},r):"github"==e.data?i:"ERROR: data: "+e.data+" does not exist"}function v(e){let t="",a="";switch(e.data){case"dev_server":t=c;break;case"dll_repo":t=h;break;case"dpm":t=m;case"prod_server":t=p;break;case"slack":t=u;break;case"github":t=d;break;case"google_drive":t=g;break;default:t="DisplayServiceData: Incorrect data supplied"}return a=e.service_name?e.service_name:"No service defined",n.createElement("span",null,n.createElement("a",{href:t},a))}const f="disb",y={[f]:{borderRadius:"5px",display:"block",margin:"20px auto",boxShadow:"0px 2px 5px rgba(0,0,0,0.25)"},diis:{borderRadius:"5px",boxShadow:"0px 2px 5px rgba(0,0,0,0.25)"}}},3233:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var n=a(7462),r=(a(7294),a(3905)),o=a(5402),i=a(2744);const l={title:"Provisioning a new Docassemble Repository"},s=void 0,c={unversionedId:"guides/provision-new-docassemble-repo",id:"guides/provision-new-docassemble-repo",title:"Provisioning a new Docassemble Repository",description:"Introduction",source:"@site/docs/guides/provision-new-docassemble-repo.mdx",sourceDirName:"guides",slug:"/guides/provision-new-docassemble-repo",permalink:"/Digital-Law-Lab/guides/provision-new-docassemble-repo",draft:!1,tags:[],version:"current",lastUpdatedBy:"Mark Ferraretto",lastUpdatedAt:1687081079,formattedLastUpdatedAt:"Jun 18, 2023",frontMatter:{title:"Provisioning a new Docassemble Repository"},sidebar:"guidesSidebar",previous:{title:"Promoting Code into Production",permalink:"/Digital-Law-Lab/guides/promoting-code-into-production"}},p={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Clone the Repository",id:"clone-the-repository",level:2},{value:"Create a new repository in Digital Law Lab using our Repository Naming Standard via the web browser",id:"create-a-new-repository-in-digital-law-lab-using-our-repository-naming-standard-via-the-web-browser",level:4},{value:"Do a single branch clone of the existing repository (command-line)",id:"do-a-single-branch-clone-of-the-existing-repository-command-line",level:4},{value:"Change into that directory",id:"change-into-that-directory",level:4},{value:"Remove the remote origin and addd the new remote origin (ie: our new repository)",id:"remove-the-remote-origin-and-addd-the-new-remote-origin-ie-our-new-repository",level:4},{value:"Set <code>main</code> as the Main Branch",id:"set-main-as-the-main-branch",level:4},{value:"Push to GitHub",id:"push-to-github",level:4},{value:"Update the Package Info",id:"update-the-package-info",level:2},{value:"Create the Working Branches",id:"create-the-working-branches",level:3},{value:"Create working branch structure",id:"create-working-branch-structure",level:3},{value:"Push the new branch(es) to GitHub",id:"push-the-new-branches-to-github",level:4},{value:"Grant access to the repo",id:"grant-access-to-the-repo",level:2},{value:"Create Google Drive Folder",id:"create-google-drive-folder",level:2},{value:"Configure Slack",id:"configure-slack",level:2},{value:"Create the Channel",id:"create-the-channel",level:3},{value:"Example",id:"example",level:4},{value:"Pin Information",id:"pin-information",level:3}],h={toc:d},m="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Use this procedure when 'copying' a repository of existing code from another repository into the Digital Law Lab so we can work on it."),(0,r.kt)("h2",{id:"clone-the-repository"},"Clone the Repository"),(0,r.kt)("admonition",{title:"TODO",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Instructions on creating a package from scratch")),(0,r.kt)("p",null,"Where we work on existing code (eg: code from ",(0,r.kt)("inlineCode",{parentName:"p"},"LLAW3301")," repo) we do not create a fork.  Instead we should mirror the repository into our Organisation."),(0,r.kt)("p",null,"Steps:"),(0,r.kt)("h4",{id:"create-a-new-repository-in-digital-law-lab-using-our-repository-naming-standard-via-the-web-browser"},"Create a new repository in Digital Law Lab using our ",(0,r.kt)("a",{parentName:"h4",href:"/policies/repository-naming-standard"},"Repository Naming Standard")," via the web browser"),(0,r.kt)("p",null,"Eg: we use the web browser to create a repo called ",(0,r.kt)("inlineCode",{parentName:"p"},"docassemble-CLCSA01ServiceDirectory")),(0,r.kt)("h4",{id:"do-a-single-branch-clone-of-the-existing-repository-command-line"},"Do a single branch clone of the existing repository (command-line)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git clone --single-branch https://github.com/LLAW3301/docassemble-LLAW33012020S2P06.git 'docassemble-CLCSA01ServiceDirectory'\n")),(0,r.kt)("p",null,"This copies only the HEAD of the ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch.  It also renames the repo to fit with our naming standards."),(0,r.kt)("h4",{id:"change-into-that-directory"},"Change into that directory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cd docassemble-CLCSA01ServiceDirectory\n")),(0,r.kt)("h4",{id:"remove-the-remote-origin-and-addd-the-new-remote-origin-ie-our-new-repository"},"Remove the remote origin and addd the new remote origin (ie: our new repository)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git remote rm origin\ngit remote add origin https://github.com:Digital-Law-Lab/docassemble-CLCSA01ServiceDirectory.git\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The above example assumes you're accessing GitHub via HTTPS, which you\nmost likely are if you're using Windows and PowerShell as per the ",(0,r.kt)("a",{parentName:"p",href:"/"},"setup guide"),".",(0,r.kt)("br",{parentName:"p"}),"\n","However, if you are using Git Bash or Linux (on WSL or otherwise) then you may want\nto use the ssh syntax ie: substitute ",(0,r.kt)("inlineCode",{parentName:"p"},"https://github.com/Digital-Law-Lab")," with\n",(0,r.kt)("inlineCode",{parentName:"p"},"git@github.com:Digital-Law-Lab"))),(0,r.kt)("h4",{id:"set-main-as-the-main-branch"},"Set ",(0,r.kt)("inlineCode",{parentName:"h4"},"main")," as the Main Branch"),(0,r.kt)("p",null,"Some older ",(0,r.kt)("inlineCode",{parentName:"p"},"LLAW3301")," repositories have a main branch called ",(0,r.kt)("inlineCode",{parentName:"p"},"master"),".  GitHub\nnow use ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," as the main branch, so ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," should be renamed to ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," for\nconsistency across all repos."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git branch -M main\n")),(0,r.kt)("h4",{id:"push-to-github"},"Push to GitHub"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git push -u origin main\n")),(0,r.kt)("h2",{id:"update-the-package-info"},"Update the Package Info"),(0,r.kt)("p",null,"Once the repository has been cloned we leave the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch alone and create and\nwork on the ",(0,r.kt)("inlineCode",{parentName:"p"},"next")," branch as per the ",(0,r.kt)("a",{parentName:"p",href:"/policies/code-branching-policy"},"Code Branching Policy"),"."),(0,r.kt)("h3",{id:"create-the-working-branches"},"Create the Working Branches"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create a ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," branch from ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," (more on why below)"),(0,r.kt)("li",{parentName:"ul"},"check out ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," and make these changes:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Rename ",(0,r.kt)("inlineCode",{parentName:"li"},"docassemble/old_package_name")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"docassemble/new_package_name")),(0,r.kt)("li",{parentName:"ul"},"Edit ",(0,r.kt)("inlineCode",{parentName:"li"},"setup.py")," and replace all occurences of ",(0,r.kt)("inlineCode",{parentName:"li"},"old_package_name")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"new_package_name")),(0,r.kt)("li",{parentName:"ul"},"find the .yml file that is used to run the app and rename it to ",(0,r.kt)("inlineCode",{parentName:"li"},"main.yml")))),(0,r.kt)("li",{parentName:"ul"},"commit changes to ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," and push"),(0,r.kt)("li",{parentName:"ul"},"pull ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," into Docassemble Playground and confirm package still runs")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In the example we've used in this document ",(0,r.kt)("inlineCode",{parentName:"p"},"old_package_name")," would be ",(0,r.kt)("inlineCode",{parentName:"p"},"LLAW33012020S2P06")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"new_package_name")," would be ",(0,r.kt)("inlineCode",{parentName:"p"},"CLCSA01ServiceDirectory"),".")),(0,r.kt)("h3",{id:"create-working-branch-structure"},"Create working branch structure"),(0,r.kt)("p",null,"This should be done in accordance with the ",(0,r.kt)("a",{parentName:"p",href:"/policies/code-branching-policy"},"Code Branching Policy"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Make sure ",(0,r.kt)("inlineCode",{parentName:"li"},"next")," branch exists, otherwise create it as per above."),(0,r.kt)("li",{parentName:"ol"},"Users should work on their own branches and those branches should be named\nconsistent with the ",(0,r.kt)("a",{parentName:"li",href:"/policies/code-branching-policy"},"Code Branching Policy"),".")),(0,r.kt)("h4",{id:"push-the-new-branches-to-github"},"Push the new branch(es) to GitHub"),(0,r.kt)("p",null,"If you've created ",(0,r.kt)("inlineCode",{parentName:"p"},"next_aaaa")," branches for other users then push these up to GitHub"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:"title='Do this for each branch you have created'",title:"'Do",this:!0,for:!0,each:!0,branch:!0,you:!0,have:!0,"created'":!0},"git checkout branch_name\ngit push\n")),(0,r.kt)("h2",{id:"grant-access-to-the-repo"},"Grant access to the repo"),(0,r.kt)("p",null,"Grant write access to ",(0,r.kt)("inlineCode",{parentName:"p"},"Digital-Law-Lab/docassemble-developers")," group eg:"),(0,r.kt)(i.Q,{imageURL:"/img/docs/provision-add-teams.png"}),(0,r.kt)("h2",{id:"create-google-drive-folder"},"Create Google Drive Folder"),(0,r.kt)("p",null,"Each repo should have a Google Drive folder in the ",(0,r.kt)("a",{href:o.hE},"root Google Drive folder"),"."),(0,r.kt)("p",null,"Create a google drive folder in the ",(0,r.kt)("a",{href:o.hE},"root folder"),".\nThe folder name should be identical to the Docassemble package name (or repository name if the repository is not a Docassemble package)."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"All Docassemble packages should have a Google Drive folder created.  The folder is\noptional for other packages")),(0,r.kt)("h2",{id:"configure-slack"},"Configure Slack"),(0,r.kt)("p",null,"On ",(0,r.kt)(o.eZ,{data:"slack",service_name:"our Slack"})," create a new channel for this repository."),(0,r.kt)("h3",{id:"create-the-channel"},"Create the Channel"),(0,r.kt)("p",null,"Channel naming convention is as per the ",(0,r.kt)("a",{parentName:"p",href:"/policies/slack-channel-naming-standard"},"Slack Channel Standard")," ie:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Use the same name as the repo but omit the ",(0,r.kt)("inlineCode",{parentName:"li"},"docassemble-")," portion for docassemble packages"),(0,r.kt)("li",{parentName:"ol"},"Package name should be in lower case (as Slack only allows for lower-case channel names)")),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("p",null,"The channel for the ",(0,r.kt)("inlineCode",{parentName:"p"},"docassemble-CLCSA01ServiceDirectory")," is called ",(0,r.kt)("inlineCode",{parentName:"p"},"clcsa01servicedirectory")),(0,r.kt)("h3",{id:"pin-information"},"Pin Information"),(0,r.kt)("p",null,"Slack allows for links to be pinned as bookmarks"),(0,r.kt)(i.Q,{imageURL:"/img/docs/provision-pin-bookmark.png"}),(0,r.kt)("p",null,"The following should be pinned as bookmarks:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Link to GitHub repository "),(0,r.kt)("li",{parentName:"ol"},"Link to Google Drive repository folder you just created")))}u.isMDXComponent=!0}}]);